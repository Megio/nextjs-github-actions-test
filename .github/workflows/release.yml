name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version name'
        required: true
        default: 'minor'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Set up Git
        run: |
          git config user.name "Mattia Magi"
          git config user.email "mattia.magi91@gmail.com"
      - name: Determine the version
        id: determine_version
        run: |
          echo "::set-output name=version::${{ github.event.inputs.version }}"
      - name: Get previous tag
        id: previous_tag
        run: |
          echo "::set-output name=tag::$(npm version ${{ github.event.inputs.version }})"
      - name: Determine next version
        id: determine_version
        run: |
          previous_tag=${{ steps.previous_tag.outputs.tag }}
          major=$(echo $previous_tag | cut -d. -f1)
          minor=$(echo $previous_tag | cut -d. -f2)
          patch=$(echo $previous_tag | cut -d. -f3)
          version=${{ github.event.inputs.version }}

          if [ "$version" == "major" ]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [ "$version" == "minor" ]; then
            minor=$((minor + 1))
            patch=0
          elif [ "$version" == "patch" ]; then
            patch=$((patch + 1))
          else
            echo "Invalid version input"
            exit 1
          fi

          next_version="$major.$minor.$patch"
          echo "::set-output name=version::$next_version"
      - name: Tag the commit
        run: |
          next_version=${{ steps.determine_version.outputs.version }}
          git tag -a "$next_version" -m "Version $next_version"
          git push --follow-tags
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_version.outputs.version }}
          release_name: Release ${{ steps.determine_version.outputs.version }}
          body: |
            Release ${{ steps.determine_version.outputs.version }}

            Add release notes here.
          draft: false
          prerelease: false